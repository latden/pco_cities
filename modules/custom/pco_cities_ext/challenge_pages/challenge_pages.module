<?php

/**
 * @file
 */

use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\node\NodeInterface;

/**
 * Implements hook_theme().
 */
function challenge_pages_theme() {
  return [
    'challenge_pages_page_theme' => [
      'render element' => 'form',
      'template' => 'challenge-page-theme-page',
    ],
    'challenge_subpage_module_page_theme' => [
      'render element' => 'form',
      'template' => 'challenge-subpage-theme-page',
    ],
//     'challenge_news_module_page_theme' => [
//       'render element' => 'form',
//       'template' => 'challenge-news-theme-page',
//     ],
  ];
}

/**
 * Implements hook_presave().
 */
function challenge_pages_node_presave(NodeInterface $node) {
  if ($node->getType() == 'challenge') {

    $language = \Drupal::languageManager()->getCurrentLanguage()->getId();

    // Check for conflict on friendly url name. Must be unique.
    $friendly_url = clean_url($node->get('field_friendly_url')->getValue()[0]['value']);
    $original_friendly_url = '';

    if($node->original) {
      $original_friendly_url = clean_url($node->original->getTranslation('en')->get('field_friendly_url')->getValue()[0]['value']);
    }

    if (get_friendly_url_name($friendly_url) and $friendly_url != $node->original->getTranslation($language)->get('field_friendly_url')->getValue()[0]['value']) {
      $response = new RedirectResponse(\Drupal::request()->getRequestUri());
      $response->send();
      \Drupal::messenger()->addError(t('Friendly URL must be unique. There is already a challenge with that friendly URL'), TRUE);
      exit;
    }

    $node->set('field_friendly_url', $friendly_url);
    $friendly_url_english = clean_url($node->getTranslation('en')->get('field_friendly_url')->getValue()[0]['value']);

    // Check to see if translation exists first.
    if (array_key_exists('fr', $node->getTranslationLanguages())) {
      if ($node->getTranslation('fr')->get('field_friendly_url')->getValue()) {
        $friendly_url_french = clean_url($node->getTranslation('fr')->get('field_friendly_url')->getValue()[0]['value']);
      }
    }


    // Delete original paths - this may or may not do anything.
    if($node->original) {
      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
      \Drupal::database()->delete('url_alias')->condition('source', '/challenges/' . $original_friendly_url)->execute();
      // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
      // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
      \Drupal::database()->delete('url_alias')->condition('source', '/challenges/' . $original_friendly_url . '/news')->execute();
      if ($node->getTranslation('en')->get('field_challeng_subpage_url_1')->getValue()) {
        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
        \Drupal::database()->delete('url_alias')->condition('source', '/challenges/' . $original_friendly_url . '/' . $node->getTranslation('en')->get('field_challeng_subpage_url_1')->getValue()[0]['value'])->execute();
      }
      if ($node->getTranslation('en')->get('field_challeng_subpage_url_2')->getValue()) {
        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
        \Drupal::database()->delete('url_alias')->condition('source', '/challenges/' . $original_friendly_url . '/' . $node->getTranslation('en')->get('field_challeng_subpage_url_2')->getValue()[0]['value'])->execute();
      }
      if ($node->getTranslation('en')->get('field_challeng_subpage_url_3')->getValue()) {
        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
        \Drupal::database()->delete('url_alias')->condition('source', '/challenges/' . $original_friendly_url . '/' . $node->getTranslation('en')->get('field_challeng_subpage_url_3')->getValue()[0]['value'])->execute();
      }
      if ($node->getTranslation('en')->get('field_challeng_subpage_url_4')->getValue()) {
        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
        \Drupal::database()->delete('url_alias')->condition('source', '/challenges/' . $original_friendly_url . '/' . $node->getTranslation('en')->get('field_challeng_subpage_url_4')->getValue()[0]['value'])->execute();
      }
      if ($node->getTranslation('en')->get('field_challeng_subpage_url_5')->getValue()) {
        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
        \Drupal::database()->delete('url_alias')->condition('source', '/challenges/' . $original_friendly_url . '/' . $node->getTranslation('en')->get('field_challeng_subpage_url_5')->getValue()[0]['value'])->execute();
      }
    }


    // Delete any conflicting paths. Add new paths.
    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
    \Drupal::database()->delete('url_alias')->condition('source', '/challenges/' . $friendly_url)->execute();
    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
    \Drupal::database()->delete('url_alias')->condition('source', '/challenges/' . $friendly_url . '/news')->execute();
    // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
    // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
    \Drupal::database()->delete('url_alias')->condition('source', '/challenges/' . $friendly_url . '/submission')->execute();

    // Check if french alias already exists, if not then create.
    if(array_key_exists('fr', $node->getTranslationLanguages())) {
      if ($node->getTranslation('fr')->get('field_friendly_url')->getValue()) {
        if (!empty(get_url_alias('/defis/' . $node->getTranslation('fr')->get('field_friendly_url')->getValue()[0]['value']))) {
          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
          // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
          \Drupal::database()->insert('url_alias')->fields([
            'source' => '/challenges/' . $friendly_url_english,
            'alias' => '/defis/' . $friendly_url_french,
            'langcode' => 'fr',
          ])->execute();
        }
      };
    }

    if(array_key_exists('fr', $node->getTranslationLanguages())) {
      if ($node->getTranslation('fr')->get('field_friendly_url')->getValue()) {
        if (!empty(get_url_alias('/defis/' . $node->getTranslation('fr')->get('field_friendly_url')->getValue()[0]['value']) . '/nouvelles')) {
          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
          // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
          \Drupal::database()->insert('url_alias')->fields([
            'source' => '/challenges/' . $friendly_url_english . '/news',
            'alias' => '/defis/' . $friendly_url_french . '/nouvelles',
            'langcode' => 'fr',
          ])->execute();
        }
      };
    }

    if(array_key_exists('fr', $node->getTranslationLanguages())) {
      if ($node->getTranslation('fr')->get('field_friendly_url')->getValue()) {
        if (!empty(get_url_alias('/defis/' . $node->getTranslation('fr')->get('field_friendly_url')->getValue()[0]['value']) . '/soumission')) {
          // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
          // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
          \Drupal::database()->insert('url_alias')->fields([
            'source' => '/challenges/' . $friendly_url_english . '/submission',
            'alias' => '/defis/' . $friendly_url_french . '/soumission',
            'langcode' => 'fr',
          ])->execute();
        }
      };
    }

    // Do the same for subpages.
    if(array_key_exists('fr', $node->getTranslationLanguages())) {
      if (!empty(($node->get('field_challeng_subpage_url_1')->getValue()[0]['value'])) && ($node->get('field_challenge_subpage_enable_1')->getValue()[0]['value'])) {
        $friendly_subpage_url = clean_url($node->get('field_challeng_subpage_url_1')->getValue()[0]['value']);
        $node->set('field_challeng_subpage_url_1', $friendly_subpage_url);

        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
        \Drupal::database()->delete('url_alias')->condition('source', '/challenges/' . $friendly_url . '/' . $friendly_subpage_url)->execute();

        if ($node->getTranslation('fr')->get('field_friendly_url')->getValue() && $node->getTranslation('fr')->get('field_challeng_subpage_url_1')->getValue()) {
          if (!empty(get_url_alias('/defis/' . $node->getTranslation('fr')->get('field_friendly_url')->getValue()[0]['value']) . '/' . $node->getTranslation('fr')->get('field_challeng_subpage_url_1')->getValue()[0]['value'])) {
            // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
            // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
            \Drupal::database()->insert('url_alias')->fields([
              'source' => '/challenges/' . $friendly_url_english . '/' . $node->getTranslation('en')->get('field_challeng_subpage_url_1')->getValue()[0]['value'],
              'alias' => '/defis/' . $friendly_url_french . '/' . $node->getTranslation('fr')->get('field_challeng_subpage_url_1')->getValue()[0]['value'],
              'langcode' => 'fr',
            ])->execute();
          }
        };
      }
    }

    if(array_key_exists('fr', $node->getTranslationLanguages())) {
      if (!empty(($node->get('field_challeng_subpage_url_2')->getValue()[0]['value'])) && ($node->get('field_challenge_subpage_enable_2')->getValue()[0]['value'])) {
        $friendly_subpage_url = clean_url($node->get('field_challeng_subpage_url_2')->getValue()[0]['value']);
        $node->set('field_challeng_subpage_url_2', $friendly_subpage_url);

        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
        \Drupal::database()->delete('url_alias')->condition('source', '/challenges/' . $friendly_url . '/' . $friendly_subpage_url)->execute();

        if ($node->getTranslation('fr')->get('field_friendly_url')->getValue() && $node->getTranslation('fr')->get('field_challeng_subpage_url_2')->getValue()) {
          if (!empty(get_url_alias('/defis/' . $node->getTranslation('fr')->get('field_friendly_url')->getValue()[0]['value']) . '/' . $node->getTranslation('fr')->get('field_challeng_subpage_url_2')->getValue()[0]['value'])) {
            // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
            // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
            \Drupal::database()->insert('url_alias')->fields([
              'source' => '/challenges/' . $friendly_url_english . '/' . $node->getTranslation('en')->get('field_challeng_subpage_url_2')->getValue()[0]['value'],
              'alias' => '/defis/' . $friendly_url_french . '/' . $node->getTranslation('fr')->get('field_challeng_subpage_url_2')->getValue()[0]['value'],
              'langcode' => 'fr',
            ])->execute();
          }
        };
      }
    }

    if(array_key_exists('fr', $node->getTranslationLanguages())) {
      if (!empty(($node->get('field_challeng_subpage_url_3')->getValue()[0]['value'])) && ($node->get('field_challenge_subpage_enable_3')->getValue()[0]['value'])) {
        $friendly_subpage_url = clean_url($node->get('field_challeng_subpage_url_3')->getValue()[0]['value']);
        $node->set('field_challeng_subpage_url_3', $friendly_subpage_url);

        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
        \Drupal::database()->delete('url_alias')->condition('source', '/challenges/' . $friendly_url . '/' . $friendly_subpage_url)->execute();

        if ($node->getTranslation('fr')->get('field_friendly_url')->getValue() && $node->getTranslation('fr')->get('field_challeng_subpage_url_3')->getValue()) {
          if (!empty(get_url_alias('/defis/' . $node->getTranslation('fr')->get('field_friendly_url')->getValue()[0]['value']) . '/' . $node->getTranslation('fr')->get('field_challeng_subpage_url_3')->getValue()[0]['value'])) {
            // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
            // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
            \Drupal::database()->insert('url_alias')->fields([
              'source' => '/challenges/' . $friendly_url_english . '/' . $node->getTranslation('en')->get('field_challeng_subpage_url_3')->getValue()[0]['value'],
              'alias' => '/defis/' . $friendly_url_french . '/' . $node->getTranslation('fr')->get('field_challeng_subpage_url_3')->getValue()[0]['value'],
              'langcode' => 'fr',
            ])->execute();
          }
        };
      }
    }

    if(array_key_exists('fr', $node->getTranslationLanguages())) {
      if (!empty(($node->get('field_challeng_subpage_url_4')->getValue()[0]['value'])) && ($node->get('field_challenge_subpage_enable_4')->getValue()[0]['value'])) {
        $friendly_subpage_url = clean_url($node->get('field_challeng_subpage_url_4')->getValue()[0]['value']);
        $node->set('field_challeng_subpage_url_4', $friendly_subpage_url);

        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
        \Drupal::database()->delete('url_alias')->condition('source', '/challenges/' . $friendly_url . '/' . $friendly_subpage_url)->execute();

        if ($node->getTranslation('fr')->get('field_friendly_url')->getValue() && $node->getTranslation('fr')->get('field_challeng_subpage_url_4')->getValue()) {
          if (!empty(get_url_alias('/defis/' . $node->getTranslation('fr')->get('field_friendly_url')->getValue()[0]['value']) . '/' . $node->getTranslation('fr')->get('field_challeng_subpage_url_4')->getValue()[0]['value'])) {
            // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
            // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
            \Drupal::database()->insert('url_alias')->fields([
              'source' => '/challenges/' . $friendly_url_english . '/' . $node->getTranslation('en')->get('field_challeng_subpage_url_4')->getValue()[0]['value'],
              'alias' => '/defis/' . $friendly_url_french . '/' . $node->getTranslation('fr')->get('field_challeng_subpage_url_4')->getValue()[0]['value'],
              'langcode' => 'fr',
            ])->execute();
          }
        };
      }
    }

    if(array_key_exists('fr', $node->getTranslationLanguages())) {
      if (!empty(($node->get('field_challeng_subpage_url_5')->getValue()[0]['value'])) && ($node->get('field_challenge_subpage_enable_5')->getValue()[0]['value'])) {
        $friendly_subpage_url = clean_url($node->get('field_challeng_subpage_url_5')->getValue()[0]['value']);
        $node->set('field_challeng_subpage_url_5', $friendly_subpage_url);

        // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
        // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
        \Drupal::database()->delete('url_alias')->condition('source', '/challenges/' . $friendly_url . '/' . $friendly_subpage_url)->execute();

        if ($node->getTranslation('fr')->get('field_friendly_url')->getValue() && $node->getTranslation('fr')->get('field_challeng_subpage_url_5')->getValue()) {
          if (!empty(get_url_alias('/defis/' . $node->getTranslation('fr')->get('field_friendly_url')->getValue()[0]['value']) . '/' . $node->getTranslation('fr')->get('field_challeng_subpage_url_5')->getValue()[0]['value'])) {
            // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
            // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
            \Drupal::database()->insert('url_alias')->fields([
              'source' => '/challenges/' . $friendly_url_english . '/' . $node->getTranslation('en')->get('field_challeng_subpage_url_5')->getValue()[0]['value'],
              'alias' => '/defis/' . $friendly_url_french . '/' . $node->getTranslation('fr')->get('field_challeng_subpage_url_5')->getValue()[0]['value'],
              'langcode' => 'fr',
            ])->execute();
          }
        };
      }
    }
  }
}

function get_url_alias($customAlias) {

  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
  $query = \Drupal::database()->query("SELECT pid FROM url_alias WHERE alias =:alias", [':alias' => $customAlias]);

  $query->allowRowCount = TRUE;

  if ($query->rowCount() == 0) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

function clean_url($dirtyUrl) {
  $friendly_url = $dirtyUrl;
  $friendly_url = strtolower($friendly_url);
  $friendly_url = str_replace('&', '', $friendly_url);
  $friendly_url = str_replace(' ', '-', $friendly_url);
  $friendly_url = str_replace('--', '-', $friendly_url);

  return $friendly_url;
}

function get_friendly_url_name($urlName) {
  // TODO: Drupal Rector Notice: Please delete the following comment after you've made any necessary changes.
  // You will need to use `\Drupal\core\Database\Database::getConnection()` if you do not yet have access to the container here.
  $query = \Drupal::database()->query("SELECT * FROM node__field_friendly_url WHERE field_friendly_url_value =:field_friendly_url_value", [':field_friendly_url_value' => $urlName]);

  $query->allowRowCount = TRUE;

  if ($query->rowCount() == 0) {
    return FALSE;
  }
  else {
    return TRUE;
  }
}
